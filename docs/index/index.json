{"interfaceLanguages":{"swift":[{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/authorizationprovider\/authorizationrequest","title":"AuthorizationRequest","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/authorizationprovider\/authorize(_:)","title":"func authorize<Request>(Request) -> NetworkRequest<Request.ResponseType>","type":"method"},{"path":"\/documentation\/networking\/authorizationprovider\/handle(authorizationresponse:from:)","title":"func handle(authorizationResponse: NetworkResponse<Self.AuthorizationRequest.ResponseType>, from: Self.AuthorizationRequest)","type":"method"}],"path":"\/documentation\/networking\/authorizationprovider","title":"AuthorizationProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/datadecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: Data) throws -> T","type":"method"}],"path":"\/documentation\/networking\/datadecoder","title":"DataDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/networkcontroller\/fetchcontent(_:)","title":"func fetchContent<Request>(Request) async throws -> Request.ResponseType","type":"method"},{"path":"\/documentation\/networking\/networkcontroller\/fetchresponse(_:)","title":"func fetchResponse<Request>(Request) async throws -> NetworkResponse<Request.ResponseType>","type":"method"}],"path":"\/documentation\/networking\/networkcontroller","title":"NetworkController","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/networkerrorhandler\/map(_:from:)","title":"func map(Error, from: NetworkResponse<Data>) -> Error","type":"method"}],"path":"\/documentation\/networking\/networkerrorhandler","title":"NetworkErrorHandler","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/networkrequest\/responsetype","title":"ResponseType","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/networkrequest\/body","title":"var body: Data?","type":"property"},{"path":"\/documentation\/networking\/networkrequest\/headers","title":"var headers: [String : String]?","type":"property"},{"path":"\/documentation\/networking\/networkrequest\/httpmethod","title":"var httpMethod: HTTPMethod","type":"property"},{"path":"\/documentation\/networking\/networkrequest\/pathcomponents","title":"var pathComponents: [String]","type":"property"},{"path":"\/documentation\/networking\/networkrequest\/queryitems","title":"var queryItems: [String : String]?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/networking\/oauthauthorizationrequest\/requiresauthorization","title":"var requiresAuthorization: Bool","type":"property"}],"title":"OAuthAuthorizationRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/networkrequest\/requiresauthorization","title":"var requiresAuthorization: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/networkrequest\/transform(data:statuscode:using:)","title":"func transform(data: Data, statusCode: HTTPStatusCode, using: DataDecoder) throws -> Self.ResponseType","type":"method"}],"path":"\/documentation\/networking\/networkrequest","title":"NetworkRequest","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/networksession\/submit(request:to:)","title":"func submit<Request>(request: Request, to: URL) async throws -> NetworkResponse<Data>","type":"method"}],"path":"\/documentation\/networking\/networksession","title":"NetworkSession","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/oauthauthorizationrequest\/accesstoken(from:)","title":"func accessToken(from: NetworkResponse<Self.ResponseType>) -> String?","type":"method"},{"path":"\/documentation\/networking\/oauthauthorizationrequest\/refreshtoken(from:)","title":"func refreshToken(from: NetworkResponse<Self.ResponseType>) -> String?","type":"method"}],"path":"\/documentation\/networking\/oauthauthorizationrequest","title":"OAuthAuthorizationRequest","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/oauthreauthorizationrequest\/init(refreshtoken:)","title":"init(refreshToken: String)","type":"init"}],"path":"\/documentation\/networking\/oauthreauthorizationrequest","title":"OAuthReauthorizationRequest","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/reauthorizationnetworkerrorhandler\/shouldattemptreauthorization(aftercatching:from:)","title":"func shouldAttemptReauthorization(afterCatching: Error, from: NetworkResponse<Data>) -> Bool","type":"method"}],"path":"\/documentation\/networking\/reauthorizationnetworkerrorhandler","title":"ReauthorizationNetworkErrorHandler","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/reauthorizationprovider\/reauthorizationrequest","title":"ReauthorizationRequest","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/reauthorizationprovider\/handle(reauthorizationresponse:from:)","title":"func handle(reauthorizationResponse: NetworkResponse<Self.ReauthorizationRequest.ResponseType>, from: Self.ReauthorizationRequest)","type":"method"},{"path":"\/documentation\/networking\/reauthorizationprovider\/makereauthorizationrequest()","title":"func makeReauthorizationRequest() -> Self.ReauthorizationRequest?","type":"method"}],"path":"\/documentation\/networking\/reauthorizationprovider","title":"ReauthorizationProvider","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/anyrequest\/init(_:)","title":"init<Request>(Request)","type":"init"},{"path":"\/documentation\/networking\/anyrequest\/init(httpmethod:pathcomponents:headers:queryitems:body:requiresauthorization:transform:)","title":"init(httpMethod: HTTPMethod, pathComponents: [String], headers: [String : String]?, queryItems: [String : String]?, body: Data?, requiresAuthorization: Bool, transform: (Data, HTTPStatusCode, DataDecoder) throws -> ResponseType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/anyrequest\/body","title":"let body: Data?","type":"property"},{"path":"\/documentation\/networking\/anyrequest\/headers","title":"let headers: [String : String]?","type":"property"},{"path":"\/documentation\/networking\/anyrequest\/httpmethod","title":"let httpMethod: HTTPMethod","type":"property"},{"path":"\/documentation\/networking\/anyrequest\/pathcomponents","title":"let pathComponents: [String]","type":"property"},{"path":"\/documentation\/networking\/anyrequest\/queryitems","title":"let queryItems: [String : String]?","type":"property"},{"path":"\/documentation\/networking\/anyrequest\/requiresauthorization","title":"let requiresAuthorization: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/anyrequest\/transform(data:statuscode:using:)","title":"func transform(data: Data, statusCode: HTTPStatusCode, using: DataDecoder) throws -> ResponseType","type":"method"}],"path":"\/documentation\/networking\/anyrequest","title":"AnyRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/authorizingnetworkcontroller\/init(baseurl:session:authorization:decoder:errorhandler:universalheaders:)","title":"init(baseURL: URL, session: NetworkSession, authorization: Authorization, decoder: DataDecoder, errorHandler: NetworkErrorHandler?, universalHeaders: [String : String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/authorizingnetworkcontroller\/authorization","title":"let authorization: Authorization","type":"property"},{"path":"\/documentation\/networking\/authorizingnetworkcontroller\/baseurl","title":"let baseURL: URL","type":"property"},{"path":"\/documentation\/networking\/authorizingnetworkcontroller\/decoder","title":"let decoder: DataDecoder","type":"property"},{"path":"\/documentation\/networking\/authorizingnetworkcontroller\/errorhandler","title":"let errorHandler: NetworkErrorHandler?","type":"property"},{"path":"\/documentation\/networking\/authorizingnetworkcontroller\/session","title":"let session: NetworkSession","type":"property"},{"path":"\/documentation\/networking\/authorizingnetworkcontroller\/universalheaders","title":"let universalHeaders: [String : String]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/authorizingnetworkcontroller\/fetchcontent(_:)","title":"func fetchContent<Request>(Request) async throws -> Request.ResponseType","type":"method"},{"path":"\/documentation\/networking\/authorizingnetworkcontroller\/fetchresponse(_:)","title":"func fetchResponse<Request>(Request) async throws -> NetworkResponse<Request.ResponseType>","type":"method"}],"path":"\/documentation\/networking\/authorizingnetworkcontroller\/networkcontroller-implementations","title":"NetworkController Implementations","type":"symbol"}],"path":"\/documentation\/networking\/authorizingnetworkcontroller","title":"AuthorizingNetworkController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/basicnetworkcontroller\/init(baseurl:session:decoder:errorhandler:universalheaders:)","title":"init(baseURL: URL, session: NetworkSession, decoder: DataDecoder, errorHandler: NetworkErrorHandler?, universalHeaders: [String : String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/basicnetworkcontroller\/baseurl","title":"let baseURL: URL","type":"property"},{"path":"\/documentation\/networking\/basicnetworkcontroller\/decoder","title":"let decoder: DataDecoder","type":"property"},{"path":"\/documentation\/networking\/basicnetworkcontroller\/errorhandler","title":"let errorHandler: NetworkErrorHandler?","type":"property"},{"path":"\/documentation\/networking\/basicnetworkcontroller\/session","title":"let session: NetworkSession","type":"property"},{"path":"\/documentation\/networking\/basicnetworkcontroller\/universalheaders","title":"let universalHeaders: [String : String]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/basicnetworkcontroller\/fetchcontent(_:)","title":"func fetchContent<Request>(Request) async throws -> Request.ResponseType","type":"method"},{"path":"\/documentation\/networking\/basicnetworkcontroller\/fetchresponse(_:)","title":"func fetchResponse<Request>(Request) async throws -> NetworkResponse<Request.ResponseType>","type":"method"}],"path":"\/documentation\/networking\/basicnetworkcontroller\/networkcontroller-implementations","title":"NetworkController Implementations","type":"symbol"}],"path":"\/documentation\/networking\/basicnetworkcontroller","title":"BasicNetworkController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/networkresponse\/init(content:statuscode:headers:)","title":"init(content: Content, statusCode: HTTPStatusCode, headers: [AnyHashable : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/networkresponse\/content","title":"let content: Content","type":"property"},{"path":"\/documentation\/networking\/networkresponse\/headers","title":"let headers: [AnyHashable : String]","type":"property"},{"path":"\/documentation\/networking\/networkresponse\/statuscode","title":"let statusCode: HTTPStatusCode","type":"property"}],"path":"\/documentation\/networking\/networkresponse","title":"NetworkResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/oauthauthorizationprovider\/init()","title":"init()","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/oauthauthorizationprovider\/authorize(_:)","title":"func authorize<Request>(Request) -> NetworkRequest<Request.ResponseType>","type":"method"},{"path":"\/documentation\/networking\/oauthauthorizationprovider\/handle(authorizationresponse:from:)","title":"func handle(authorizationResponse: NetworkResponse<AuthorizationRequest.ResponseType>, from: AuthorizationRequest)","type":"method"}],"path":"\/documentation\/networking\/oauthauthorizationprovider\/authorizationprovider-implementations","title":"AuthorizationProvider Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/oauthauthorizationprovider\/handle(reauthorizationresponse:from:)","title":"func handle(reauthorizationResponse: NetworkResponse<ReauthorizationRequest.ResponseType>, from: ReauthorizationRequest)","type":"method"},{"path":"\/documentation\/networking\/oauthauthorizationprovider\/makereauthorizationrequest()","title":"func makeReauthorizationRequest() -> ReauthorizationRequest?","type":"method"}],"path":"\/documentation\/networking\/oauthauthorizationprovider\/reauthorizationprovider-implementations","title":"ReauthorizationProvider Implementations","type":"symbol"}],"path":"\/documentation\/networking\/oauthauthorizationprovider","title":"OAuthAuthorizationProvider","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/reauthorizingnetworkcontroller\/init(baseurl:session:authorization:decoder:errorhandler:universalheaders:)","title":"init(baseURL: URL, session: NetworkSession, authorization: Authorization, decoder: DataDecoder, errorHandler: ReauthorizationNetworkErrorHandler?, universalHeaders: [String : String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/reauthorizingnetworkcontroller\/authorization","title":"let authorization: Authorization","type":"property"},{"path":"\/documentation\/networking\/reauthorizingnetworkcontroller\/baseurl","title":"let baseURL: URL","type":"property"},{"path":"\/documentation\/networking\/reauthorizingnetworkcontroller\/decoder","title":"let decoder: DataDecoder","type":"property"},{"path":"\/documentation\/networking\/reauthorizingnetworkcontroller\/errorhandler","title":"let errorHandler: ReauthorizationNetworkErrorHandler?","type":"property"},{"path":"\/documentation\/networking\/reauthorizingnetworkcontroller\/session","title":"let session: NetworkSession","type":"property"},{"path":"\/documentation\/networking\/reauthorizingnetworkcontroller\/universalheaders","title":"let universalHeaders: [String : String]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/reauthorizingnetworkcontroller\/fetchresponse(_:shouldattemptreauthorization:)","title":"func fetchResponse<Request>(Request, shouldAttemptReauthorization: Bool) async throws -> NetworkResponse<Request.ResponseType>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/reauthorizingnetworkcontroller\/fetchcontent(_:)","title":"func fetchContent<Request>(Request) async throws -> Request.ResponseType","type":"method"},{"path":"\/documentation\/networking\/reauthorizingnetworkcontroller\/fetchresponse(_:)","title":"func fetchResponse<Request>(Request) async throws -> NetworkResponse<Request.ResponseType>","type":"method"}],"path":"\/documentation\/networking\/reauthorizingnetworkcontroller\/networkcontroller-implementations","title":"NetworkController Implementations","type":"symbol"}],"path":"\/documentation\/networking\/reauthorizingnetworkcontroller","title":"ReauthorizingNetworkController","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networking\/httpmethod\/connect","title":"case connect","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/head","title":"case head","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/options","title":"case options","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/post","title":"case post","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/put","title":"case put","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/trace","title":"case trace","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/httpmethod","title":"HTTPMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/httprequestsenttohttpsport","title":"case HTTPRequestSentToHTTPSPort","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/httpversionnotsupported","title":"case HTTPVersionNotSupported","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/imused","title":"case IMUsed","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/sslcertificateerror","title":"case SSLCertificateError","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/sslcertificaterequired","title":"case SSLCertificateRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/uritoolong","title":"case URITooLong","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/accepted","title":"case accepted","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/alreadyreported","title":"case alreadyReported","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/badgateway","title":"case badGateway","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/badrequest","title":"case badRequest","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/clientclosedrequest","title":"case clientClosedRequest","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/conflict","title":"case conflict","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/created","title":"case created","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/expectationfailed","title":"case expectationFailed","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/faileddependency","title":"case failedDependency","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/forbidden","title":"case forbidden","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/found","title":"case found","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/gatewaytimeout","title":"case gatewayTimeout","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/gone","title":"case gone","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/insufficientstorage","title":"case insufficientStorage","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/internalservererror","title":"case internalServerError","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/lengthrequired","title":"case lengthRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/locked","title":"case locked","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/loopdetected","title":"case loopDetected","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/methodnotallowed","title":"case methodNotAllowed","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/misdirectedrequest","title":"case misdirectedRequest","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/movedpermanently","title":"case movedPermanently","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/multistatus","title":"case multiStatus","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/multiplechoices","title":"case multipleChoices","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/networkauthenticationrequired","title":"case networkAuthenticationRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/nocontent","title":"case noContent","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/noresponse","title":"case noResponse","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/nonauthoritativeinformation","title":"case nonAuthoritativeInformation","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/notacceptable","title":"case notAcceptable","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/notextended","title":"case notExtended","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/notimplemented","title":"case notImplemented","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/notmodified","title":"case notModified","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/ok","title":"case ok","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/partialcontent","title":"case partialContent","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/payloadtoolarge","title":"case payloadTooLarge","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/paymentrequired","title":"case paymentRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/permenantredirect","title":"case permenantRedirect","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/preconditionfailed","title":"case preconditionFailed","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/preconditionrequired","title":"case preconditionRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/processing","title":"case processing","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/proxyauthenticationrequired","title":"case proxyAuthenticationRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/rangenotsatisfiable","title":"case rangeNotSatisfiable","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/requestheaderfieldstoolarge","title":"case requestHeaderFieldsTooLarge","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/requesttimeout","title":"case requestTimeout","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/resetcontent","title":"case resetContent","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/seeother","title":"case seeOther","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/serviceunavailable","title":"case serviceUnavailable","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/switchproxy","title":"case switchProxy","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/switchingprotocols","title":"case switchingProtocols","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/teapot","title":"case teapot","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/temporaryredirect","title":"case temporaryRedirect","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/toomanyrequests","title":"case tooManyRequests","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/unauthorized","title":"case unauthorized","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/unavailableforlegalreasons","title":"case unavailableForLegalReasons","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/unprocessableentity","title":"case unprocessableEntity","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/unsupportedmediatype","title":"case unsupportedMediaType","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/upgraderequired","title":"case upgradeRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/useproxy","title":"case useProxy","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/variantalsonegotiates","title":"case variantAlsoNegotiates","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/httpstatuscode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/networking\/httpstatuscode\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/networking\/httpstatuscode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/httpstatuscode","title":"HTTPStatusCode","type":"enum"}],"path":"\/documentation\/networking","title":"Networking","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}