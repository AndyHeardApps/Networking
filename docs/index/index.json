{"interfaceLanguages":{"swift":[{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/datadecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: Data) throws -> T","type":"method"}],"path":"\/documentation\/networking\/datadecoder","title":"DataDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/dataencoder\/encode(_:)","title":"func encode(some Encodable) throws -> Data","type":"method"}],"path":"\/documentation\/networking\/dataencoder","title":"DataEncoder","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/httpauthorizationprovider\/authorizationrequest","title":"AuthorizationRequest","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/httpauthorizationprovider\/authorize(_:)","title":"func authorize<Request>(Request) async throws -> any HTTPRequest<Request.Body, Request.Response>","type":"method"},{"path":"\/documentation\/networking\/httpauthorizationprovider\/handle(authorizationresponse:from:)","title":"func handle(authorizationResponse: HTTPResponse<Self.AuthorizationRequest.Response>, from: Self.AuthorizationRequest) async","type":"method"}],"path":"\/documentation\/networking\/httpauthorizationprovider","title":"HTTPAuthorizationProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/httpcontroller\/fetchcontent(_:)","title":"func fetchContent<Request>(Request) async throws -> Request.Response","type":"method"},{"path":"\/documentation\/networking\/httpcontroller\/fetchresponse(_:)","title":"func fetchResponse<Request>(Request) async throws -> HTTPResponse<Request.Response>","type":"method"}],"path":"\/documentation\/networking\/httpcontroller","title":"HTTPController","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/networking\/httpcontrollerdelegate\/controller(_:decoderesponse:fromrequest:using:)-7632u","title":"func controller<Request>(any HTTPController, decodeResponse: HTTPResponse<Data>, fromRequest: Request, using: DataCoders) throws -> HTTPResponse<Request.Response>","type":"method"}],"title":"HTTPControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httpcontrollerdelegate\/controller(_:decoderesponse:fromrequest:using:)-1b7pl","title":"func controller<Request>(any HTTPController, decodeResponse: HTTPResponse<Data>, fromRequest: Request, using: DataCoders) throws -> HTTPResponse<Request.Response>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/networking\/httpcontrollerdelegate\/controller(_:didrecieveerror:from:using:)-7wsic","title":"func controller(any HTTPController, didRecieveError: any Error, from: HTTPResponse<Data>, using: DataCoders) -> any Error","type":"method"}],"title":"HTTPControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httpcontrollerdelegate\/controller(_:didrecieveerror:from:using:)-69ne","title":"func controller(any HTTPController, didRecieveError: any Error, from: HTTPResponse<Data>, using: DataCoders) -> any Error","type":"method"},{"children":[{"children":[{"path":"\/documentation\/networking\/httpcontrollerdelegate\/controller(_:preparerequestforsubmission:using:)-pu1k","title":"func controller<Request>(any HTTPController, prepareRequestForSubmission: Request, using: DataCoders) throws -> any HTTPRequest<Data, Request.Response>","type":"method"}],"title":"HTTPControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httpcontrollerdelegate\/controller(_:preparerequestforsubmission:using:)-77lab","title":"func controller<Request>(any HTTPController, prepareRequestForSubmission: Request, using: DataCoders) throws -> any HTTPRequest<Data, Request.Response>","type":"method"}],"path":"\/documentation\/networking\/httpcontrollerdelegate","title":"HTTPControllerDelegate","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/httpreauthorizationprovider\/reauthorizationrequest","title":"ReauthorizationRequest","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/httpreauthorizationprovider\/handle(reauthorizationresponse:from:)","title":"func handle(reauthorizationResponse: HTTPResponse<Self.ReauthorizationRequest.Response>, from: Self.ReauthorizationRequest) async","type":"method"},{"path":"\/documentation\/networking\/httpreauthorizationprovider\/makereauthorizationrequest()","title":"func makeReauthorizationRequest() async -> Self.ReauthorizationRequest?","type":"method"}],"path":"\/documentation\/networking\/httpreauthorizationprovider","title":"HTTPReauthorizationProvider","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequest\/body-swift.associatedtype","title":"Body","type":"associatedtype"},{"path":"\/documentation\/networking\/httprequest\/response","title":"Response","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/networking\/httprequest\/body-6nbh7","title":"var body: Never","type":"property"}],"title":"HTTPRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httprequest\/body-6kt5e","title":"var body: Self.Body","type":"property"},{"children":[{"children":[{"path":"\/documentation\/networking\/httprequest\/headers-sbh","title":"var headers: [String : String]?","type":"property"}],"title":"HTTPRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httprequest\/headers-75gmd","title":"var headers: [String : String]?","type":"property"},{"path":"\/documentation\/networking\/httprequest\/httpmethod","title":"var httpMethod: HTTPMethod","type":"property"},{"path":"\/documentation\/networking\/httprequest\/pathcomponents","title":"var pathComponents: [String]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/networking\/httprequest\/queryitems-3dy3b","title":"var queryItems: [String : String]?","type":"property"}],"title":"HTTPRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httprequest\/queryitems-1yzu8","title":"var queryItems: [String : String]?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/networking\/httprequest\/requiresauthorization-5z49z","title":"var requiresAuthorization: Bool","type":"property"}],"title":"HTTPRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httprequest\/requiresauthorization-2369f","title":"var requiresAuthorization: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequest\/decode(data:statuscode:using:)","title":"func decode(data: Data, statusCode: HTTPStatusCode, using: DataCoders) throws -> Self.Response","type":"method"},{"children":[{"children":[{"path":"\/documentation\/networking\/httprequest\/encode(body:headers:using:)-1y6xr","title":"func encode(body: Self.Body, headers: inout [String : String], using: DataCoders) throws -> Data","type":"method"}],"title":"HTTPRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httprequest\/encode(body:headers:using:)-7qe3v","title":"func encode(body: Self.Body, headers: inout [String : String], using: DataCoders) throws -> Data","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequest\/queryencode(_:with:)","title":"static func queryEncode(some Encodable, with: QueryEncoder?) -> [String : String]","type":"method"}],"path":"\/documentation\/networking\/httprequest","title":"HTTPRequest","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/httpsession\/submit(request:to:)","title":"func submit<Request>(request: Request, to: URL) async throws -> HTTPResponse<Data>","type":"method"}],"path":"\/documentation\/networking\/httpsession","title":"HTTPSession","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/oauthhttpauthorizationrequest\/accesstoken(from:)","title":"func accessToken(from: HTTPResponse<Self.Response>) -> String?","type":"method"},{"path":"\/documentation\/networking\/oauthhttpauthorizationrequest\/refreshtoken(from:)","title":"func refreshToken(from: HTTPResponse<Self.Response>) -> String?","type":"method"}],"path":"\/documentation\/networking\/oauthhttpauthorizationrequest","title":"OAuthHTTPAuthorizationRequest","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/oauthhttpreauthorizationrequest\/init(refreshtoken:)","title":"init(refreshToken: String)","type":"init"}],"path":"\/documentation\/networking\/oauthhttpreauthorizationrequest","title":"OAuthHTTPReauthorizationRequest","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/networking\/reauthorizinghttpcontrollerdelegate\/controller(_:shouldattemptreauthorizationaftercatching:from:)-8huhx","title":"func controller(any HTTPController, shouldAttemptReauthorizationAfterCatching: any Error, from: HTTPResponse<Data>) -> Bool","type":"method"}],"title":"ReauthorizingHTTPControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/reauthorizinghttpcontrollerdelegate\/controller(_:shouldattemptreauthorizationaftercatching:from:)-8n9s9","title":"func controller(any HTTPController, shouldAttemptReauthorizationAfterCatching: any Error, from: HTTPResponse<Data>) -> Bool","type":"method"}],"path":"\/documentation\/networking\/reauthorizinghttpcontrollerdelegate","title":"ReauthorizingHTTPControllerDelegate","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketconnection\/input","title":"Input","type":"associatedtype"},{"path":"\/documentation\/networking\/websocketconnection\/output-swift.associatedtype","title":"Output","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketconnection\/isconnected","title":"var isConnected: Bool","type":"property"},{"path":"\/documentation\/networking\/websocketconnection\/output-swift.property","title":"var output: AsyncThrowingStream<Self.Output, any Error>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketconnection\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/networking\/websocketconnection\/open()","title":"func open()","type":"method"},{"path":"\/documentation\/networking\/websocketconnection\/send(_:)","title":"func send(Self.Input) async throws","type":"method"}],"path":"\/documentation\/networking\/websocketconnection","title":"WebSocketConnection","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketcontroller\/createconnection(with:)","title":"func createConnection<Request>(with: Request) throws -> any WebSocketConnection<Request.Input, Request.Output>","type":"method"}],"path":"\/documentation\/networking\/websocketcontroller","title":"WebSocketController","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/networking\/websocketcontrollerdelegate\/controller(_:pingintervalforrequest:)-7601z","title":"func controller(any WebSocketController, pingIntervalForRequest: some WebSocketRequest) -> ContinuousClock.Instant.Duration?","type":"method"}],"title":"WebSocketControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/websocketcontrollerdelegate\/controller(_:pingintervalforrequest:)-56le8","title":"func controller(any WebSocketController, pingIntervalForRequest: some WebSocketRequest) -> ContinuousClock.Instant.Duration?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/networking\/websocketcontrollerdelegate\/controller(_:preparetoopenconnectionwithrequest:)-24fs1","title":"func controller<Request>(any WebSocketController, prepareToOpenConnectionWithRequest: Request) throws -> any WebSocketRequest<Request.Input, Request.Output>","type":"method"}],"title":"WebSocketControllerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/websocketcontrollerdelegate\/controller(_:preparetoopenconnectionwithrequest:)-8bi4q","title":"func controller<Request>(any WebSocketController, prepareToOpenConnectionWithRequest: Request) throws -> any WebSocketRequest<Request.Input, Request.Output>","type":"method"}],"path":"\/documentation\/networking\/websocketcontrollerdelegate","title":"WebSocketControllerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketinterface\/interfaceclosecode","title":"var interfaceCloseCode: WebSocketInterfaceCloseCode?","type":"property"},{"path":"\/documentation\/networking\/websocketinterface\/interfaceclosereason","title":"var interfaceCloseReason: String?","type":"property"},{"path":"\/documentation\/networking\/websocketinterface\/interfacestate","title":"var interfaceState: WebSocketInterfaceState","type":"property"},{"path":"\/documentation\/networking\/websocketinterface\/output","title":"var output: AsyncThrowingStream<Data, any Error>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketinterface\/close(closecode:reason:)","title":"func close(closeCode: WebSocketInterfaceCloseCode, reason: String?)","type":"method"},{"path":"\/documentation\/networking\/websocketinterface\/open()","title":"func open()","type":"method"},{"path":"\/documentation\/networking\/websocketinterface\/send(_:)","title":"func send(Data) async throws","type":"method"},{"path":"\/documentation\/networking\/websocketinterface\/sendping()","title":"func sendPing() async throws","type":"method"}],"path":"\/documentation\/networking\/websocketinterface","title":"WebSocketInterface","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketrequest\/input","title":"Input","type":"associatedtype"},{"path":"\/documentation\/networking\/websocketrequest\/output","title":"Output","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/networking\/websocketrequest\/headers-6ctfz","title":"var headers: [String : String]?","type":"property"}],"title":"WebSocketRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/websocketrequest\/headers-72wwz","title":"var headers: [String : String]?","type":"property"},{"path":"\/documentation\/networking\/websocketrequest\/pathcomponents","title":"var pathComponents: [String]","type":"property"},{"children":[{"children":[{"path":"\/documentation\/networking\/websocketrequest\/queryitems-67a0r","title":"var queryItems: [String : String]?","type":"property"}],"title":"WebSocketRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/websocketrequest\/queryitems-67arj","title":"var queryItems: [String : String]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/networking\/websocketrequest\/decode(data:using:)-6zk91","title":"func decode(data: Data, using: DataCoders) throws -> Self.Output","type":"method"}],"title":"WebSocketRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/websocketrequest\/decode(data:using:)-1er1e","title":"func decode(data: Data, using: DataCoders) throws -> Self.Output","type":"method"},{"children":[{"children":[{"path":"\/documentation\/networking\/websocketrequest\/encode(input:using:)-1vto4","title":"func encode(input: Self.Input, using: DataCoders) throws -> Data","type":"method"}],"title":"WebSocketRequest Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/websocketrequest\/encode(input:using:)-2u1ga","title":"func encode(input: Self.Input, using: DataCoders) throws -> Data","type":"method"}],"path":"\/documentation\/networking\/websocketrequest","title":"WebSocketRequest","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketsession\/createinterface(to:with:)","title":"func createInterface(to: some WebSocketRequest, with: URL) throws -> any WebSocketInterface","type":"method"}],"path":"\/documentation\/networking\/websocketsession","title":"WebSocketSession","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/anyhttprequest\/init(_:)","title":"init<Request>(Request)","type":"init"},{"path":"\/documentation\/networking\/anyhttprequest\/init(httpmethod:pathcomponents:headers:queryitems:body:requiresauthorization:encode:decode:)","title":"init(httpMethod: HTTPMethod, pathComponents: [String], headers: [String : String]?, queryItems: [String : String]?, body: Body, requiresAuthorization: Bool, encode: (Body, inout [String : String], DataCoders) throws -> Data, decode: (Data, HTTPStatusCode, DataCoders) throws -> Response)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/anyhttprequest\/body","title":"let body: Body","type":"property"},{"path":"\/documentation\/networking\/anyhttprequest\/headers","title":"let headers: [String : String]?","type":"property"},{"path":"\/documentation\/networking\/anyhttprequest\/httpmethod","title":"let httpMethod: HTTPMethod","type":"property"},{"path":"\/documentation\/networking\/anyhttprequest\/pathcomponents","title":"let pathComponents: [String]","type":"property"},{"path":"\/documentation\/networking\/anyhttprequest\/queryitems","title":"let queryItems: [String : String]?","type":"property"},{"path":"\/documentation\/networking\/anyhttprequest\/requiresauthorization","title":"let requiresAuthorization: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/anyhttprequest\/decode(data:statuscode:using:)","title":"func decode(data: Data, statusCode: HTTPStatusCode, using: DataCoders) throws -> Response","type":"method"},{"path":"\/documentation\/networking\/anyhttprequest\/encode(body:headers:using:)","title":"func encode(body: Body, headers: inout [String : String], using: DataCoders) throws -> Data","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/anyhttprequest\/queryencode(_:with:)","title":"static func queryEncode(some Encodable, with: QueryEncoder?) -> [String : String]","type":"method"}],"path":"\/documentation\/networking\/anyhttprequest\/httprequest-implementations","title":"HTTPRequest Implementations","type":"symbol"}],"path":"\/documentation\/networking\/anyhttprequest","title":"AnyHTTPRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/anywebsocketrequest\/init(_:)","title":"init<Request>(Request)","type":"init"},{"path":"\/documentation\/networking\/anywebsocketrequest\/init(pathcomponents:headers:queryitems:encode:decode:)","title":"init(pathComponents: [String], headers: [String : String]?, queryItems: [String : String]?, encode: (Input, DataCoders) throws -> Data, decode: (Data, DataCoders) throws -> Output)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/anywebsocketrequest\/headers","title":"let headers: [String : String]?","type":"property"},{"path":"\/documentation\/networking\/anywebsocketrequest\/pathcomponents","title":"let pathComponents: [String]","type":"property"},{"path":"\/documentation\/networking\/anywebsocketrequest\/queryitems","title":"let queryItems: [String : String]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/anywebsocketrequest\/decode(data:using:)","title":"func decode(data: Data, using: DataCoders) throws -> Output","type":"method"},{"path":"\/documentation\/networking\/anywebsocketrequest\/encode(input:using:)","title":"func encode(input: Input, using: DataCoders) throws -> Data","type":"method"}],"path":"\/documentation\/networking\/anywebsocketrequest","title":"AnyWebSocketRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/authorizinghttpcontroller\/init(baseurl:session:datacoders:delegate:authorization:)","title":"init(baseURL: URL, session: any HTTPSession, dataCoders: DataCoders, delegate: (any HTTPControllerDelegate)?, authorization: Authorization)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/authorizinghttpcontroller\/authorization","title":"let authorization: Authorization","type":"property"},{"path":"\/documentation\/networking\/authorizinghttpcontroller\/baseurl","title":"let baseURL: URL","type":"property"},{"path":"\/documentation\/networking\/authorizinghttpcontroller\/datacoders","title":"let dataCoders: DataCoders","type":"property"},{"path":"\/documentation\/networking\/authorizinghttpcontroller\/delegate","title":"let delegate: any HTTPControllerDelegate","type":"property"},{"path":"\/documentation\/networking\/authorizinghttpcontroller\/session","title":"let session: any HTTPSession","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/authorizinghttpcontroller\/fetchcontent(_:)","title":"func fetchContent<Request>(Request) async throws -> Request.Response","type":"method"},{"path":"\/documentation\/networking\/authorizinghttpcontroller\/fetchresponse(_:)","title":"func fetchResponse<Request>(Request) async throws -> HTTPResponse<Request.Response>","type":"method"}],"path":"\/documentation\/networking\/authorizinghttpcontroller\/httpcontroller-implementations","title":"HTTPController Implementations","type":"symbol"}],"path":"\/documentation\/networking\/authorizinghttpcontroller","title":"AuthorizingHTTPController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/basichttpcontroller\/init(baseurl:session:datacoders:delegate:)","title":"init(baseURL: URL, session: any HTTPSession, dataCoders: DataCoders, delegate: (any HTTPControllerDelegate)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/basichttpcontroller\/baseurl","title":"let baseURL: URL","type":"property"},{"path":"\/documentation\/networking\/basichttpcontroller\/datacoders","title":"let dataCoders: DataCoders","type":"property"},{"path":"\/documentation\/networking\/basichttpcontroller\/delegate","title":"let delegate: any HTTPControllerDelegate","type":"property"},{"path":"\/documentation\/networking\/basichttpcontroller\/session","title":"let session: any HTTPSession","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/basichttpcontroller\/fetchcontent(_:)","title":"func fetchContent<Request>(Request) async throws -> Request.Response","type":"method"},{"path":"\/documentation\/networking\/basichttpcontroller\/fetchresponse(_:)","title":"func fetchResponse<Request>(Request) async throws -> HTTPResponse<Request.Response>","type":"method"}],"path":"\/documentation\/networking\/basichttpcontroller\/httpcontroller-implementations","title":"HTTPController Implementations","type":"symbol"}],"path":"\/documentation\/networking\/basichttpcontroller","title":"BasicHTTPController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/basicwebsocketcontroller\/init(baseurl:session:datacoders:delegate:)","title":"init(baseURL: URL, session: any WebSocketSession, dataCoders: DataCoders, delegate: (any WebSocketControllerDelegate)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/basicwebsocketcontroller\/baseurl","title":"let baseURL: URL","type":"property"},{"path":"\/documentation\/networking\/basicwebsocketcontroller\/datacoders","title":"let dataCoders: DataCoders","type":"property"},{"path":"\/documentation\/networking\/basicwebsocketcontroller\/delegate","title":"let delegate: any WebSocketControllerDelegate","type":"property"},{"path":"\/documentation\/networking\/basicwebsocketcontroller\/session","title":"let session: any WebSocketSession","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/basicwebsocketcontroller\/createconnection(with:)","title":"func createConnection<Request>(with: Request) throws -> any WebSocketConnection<Request.Input, Request.Output>","type":"method"}],"path":"\/documentation\/networking\/basicwebsocketcontroller\/websocketcontroller-implementations","title":"WebSocketController Implementations","type":"symbol"}],"path":"\/documentation\/networking\/basicwebsocketcontroller","title":"BasicWebSocketController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/datacoders\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/datacoders\/requiredecoder(for:)","title":"func requireDecoder(for: HTTPContentType) throws -> any DataDecoder","type":"method"},{"path":"\/documentation\/networking\/datacoders\/requireencoder(for:)","title":"func requireEncoder(for: HTTPContentType) throws -> any DataEncoder","type":"method"},{"path":"\/documentation\/networking\/datacoders\/set(_:for:)-3sjye","title":"func set(some DataDecoder, for: HTTPContentType)","type":"method"},{"path":"\/documentation\/networking\/datacoders\/set(_:for:)-63yj2","title":"func set(some DataEncoder, for: HTTPContentType)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/datacoders\/default","title":"static let `default`: DataCoders","type":"property"}],"path":"\/documentation\/networking\/datacoders","title":"DataCoders","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/httpcontenttype\/init(stringliteral:)","title":"init(stringLiteral: StringLiteralType)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httpcontenttype\/json","title":"static var json: HTTPContentType","type":"property"},{"path":"\/documentation\/networking\/httpcontenttype\/octetstream","title":"static var octetStream: HTTPContentType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/httpcontenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/httpcontenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/httpcontenttype\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/networking\/httpcontenttype\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/httpcontenttype\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/networking\/httpcontenttype\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/networking\/httpcontenttype","title":"HTTPContentType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/httpresponse\/init(content:statuscode:headers:)","title":"init(content: Content, statusCode: HTTPStatusCode, headers: [AnyHashable : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httpresponse\/content","title":"let content: Content","type":"property"},{"path":"\/documentation\/networking\/httpresponse\/headers","title":"let headers: [AnyHashable : String]","type":"property"},{"path":"\/documentation\/networking\/httpresponse\/statuscode","title":"let statusCode: HTTPStatusCode","type":"property"}],"path":"\/documentation\/networking\/httpresponse","title":"HTTPResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/oauthhttpauthorizationprovider\/init()","title":"init()","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/oauthhttpauthorizationprovider\/authorize(_:)","title":"func authorize<Request>(Request) -> any HTTPRequest<Request.Body, Request.Response>","type":"method"},{"path":"\/documentation\/networking\/oauthhttpauthorizationprovider\/handle(authorizationresponse:from:)","title":"func handle(authorizationResponse: HTTPResponse<AuthorizationRequest.Response>, from: AuthorizationRequest)","type":"method"}],"path":"\/documentation\/networking\/oauthhttpauthorizationprovider\/httpauthorizationprovider-implementations","title":"HTTPAuthorizationProvider Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/oauthhttpauthorizationprovider\/handle(reauthorizationresponse:from:)","title":"func handle(reauthorizationResponse: HTTPResponse<ReauthorizationRequest.Response>, from: ReauthorizationRequest)","type":"method"},{"path":"\/documentation\/networking\/oauthhttpauthorizationprovider\/makereauthorizationrequest()","title":"func makeReauthorizationRequest() -> ReauthorizationRequest?","type":"method"}],"path":"\/documentation\/networking\/oauthhttpauthorizationprovider\/httpreauthorizationprovider-implementations","title":"HTTPReauthorizationProvider Implementations","type":"symbol"}],"path":"\/documentation\/networking\/oauthhttpauthorizationprovider","title":"OAuthHTTPAuthorizationProvider","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/queryencoder\/init(userinfo:)","title":"init(userInfo: [CodingUserInfoKey : Any])","type":"init"}],"path":"\/documentation\/networking\/queryencoder","title":"QueryEncoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/reauthorizinghttpcontroller\/init(baseurl:reauthorizationbaseurl:session:datacoders:delegate:authorization:)","title":"init(baseURL: URL, reauthorizationBaseURL: URL?, session: any HTTPSession, dataCoders: DataCoders, delegate: (any ReauthorizingHTTPControllerDelegate)?, authorization: Authorization)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/reauthorizinghttpcontroller\/authorization","title":"let authorization: Authorization","type":"property"},{"path":"\/documentation\/networking\/reauthorizinghttpcontroller\/baseurl","title":"let baseURL: URL","type":"property"},{"path":"\/documentation\/networking\/reauthorizinghttpcontroller\/datacoders","title":"let dataCoders: DataCoders","type":"property"},{"path":"\/documentation\/networking\/reauthorizinghttpcontroller\/delegate","title":"let delegate: any ReauthorizingHTTPControllerDelegate","type":"property"},{"path":"\/documentation\/networking\/reauthorizinghttpcontroller\/reauthorizationbaseurl","title":"let reauthorizationBaseURL: URL","type":"property"},{"path":"\/documentation\/networking\/reauthorizinghttpcontroller\/session","title":"let session: any HTTPSession","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/reauthorizinghttpcontroller\/fetchcontent(_:)","title":"func fetchContent<Request>(Request) async throws -> Request.Response","type":"method"},{"path":"\/documentation\/networking\/reauthorizinghttpcontroller\/fetchresponse(_:)","title":"func fetchResponse<Request>(Request) async throws -> HTTPResponse<Request.Response>","type":"method"}],"path":"\/documentation\/networking\/reauthorizinghttpcontroller\/httpcontroller-implementations","title":"HTTPController Implementations","type":"symbol"}],"path":"\/documentation\/networking\/reauthorizinghttpcontroller","title":"ReauthorizingHTTPController","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networking\/httpmethod\/connect","title":"case connect","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/head","title":"case head","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/options","title":"case options","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/post","title":"case post","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/put","title":"case put","type":"case"},{"path":"\/documentation\/networking\/httpmethod\/trace","title":"case trace","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/httpmethod","title":"HTTPMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/httprequestsenttohttpsport","title":"case HTTPRequestSentToHTTPSPort","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/httpversionnotsupported","title":"case HTTPVersionNotSupported","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/imused","title":"case IMUsed","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/sslcertificateerror","title":"case SSLCertificateError","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/sslcertificaterequired","title":"case SSLCertificateRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/uritoolong","title":"case URITooLong","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/accepted","title":"case accepted","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/alreadyreported","title":"case alreadyReported","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/badgateway","title":"case badGateway","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/badrequest","title":"case badRequest","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/clientclosedrequest","title":"case clientClosedRequest","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/conflict","title":"case conflict","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/continue","title":"case `continue`","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/created","title":"case created","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/expectationfailed","title":"case expectationFailed","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/faileddependency","title":"case failedDependency","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/forbidden","title":"case forbidden","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/found","title":"case found","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/gatewaytimeout","title":"case gatewayTimeout","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/gone","title":"case gone","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/insufficientstorage","title":"case insufficientStorage","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/internalservererror","title":"case internalServerError","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/lengthrequired","title":"case lengthRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/locked","title":"case locked","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/loopdetected","title":"case loopDetected","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/methodnotallowed","title":"case methodNotAllowed","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/misdirectedrequest","title":"case misdirectedRequest","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/movedpermanently","title":"case movedPermanently","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/multistatus","title":"case multiStatus","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/multiplechoices","title":"case multipleChoices","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/networkauthenticationrequired","title":"case networkAuthenticationRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/nocontent","title":"case noContent","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/noresponse","title":"case noResponse","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/nonauthoritativeinformation","title":"case nonAuthoritativeInformation","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/notacceptable","title":"case notAcceptable","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/notextended","title":"case notExtended","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/notimplemented","title":"case notImplemented","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/notmodified","title":"case notModified","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/ok","title":"case ok","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/partialcontent","title":"case partialContent","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/payloadtoolarge","title":"case payloadTooLarge","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/paymentrequired","title":"case paymentRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/permenantredirect","title":"case permenantRedirect","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/preconditionfailed","title":"case preconditionFailed","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/preconditionrequired","title":"case preconditionRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/processing","title":"case processing","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/proxyauthenticationrequired","title":"case proxyAuthenticationRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/rangenotsatisfiable","title":"case rangeNotSatisfiable","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/requestheaderfieldstoolarge","title":"case requestHeaderFieldsTooLarge","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/requesttimeout","title":"case requestTimeout","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/resetcontent","title":"case resetContent","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/seeother","title":"case seeOther","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/serviceunavailable","title":"case serviceUnavailable","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/switchproxy","title":"case switchProxy","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/switchingprotocols","title":"case switchingProtocols","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/teapot","title":"case teapot","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/temporaryredirect","title":"case temporaryRedirect","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/toomanyrequests","title":"case tooManyRequests","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/unauthorized","title":"case unauthorized","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/unavailableforlegalreasons","title":"case unavailableForLegalReasons","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/unprocessableentity","title":"case unprocessableEntity","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/unsupportedmediatype","title":"case unsupportedMediaType","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/upgraderequired","title":"case upgradeRequired","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/useproxy","title":"case useProxy","type":"case"},{"path":"\/documentation\/networking\/httpstatuscode\/variantalsonegotiates","title":"case variantAlsoNegotiates","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/httpstatuscode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/networking\/httpstatuscode\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/httpstatuscode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/networking\/httpstatuscode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/httpstatuscode","title":"HTTPStatusCode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/abnormalclosure","title":"case abnormalClosure","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/goingaway","title":"case goingAway","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/internalservererror","title":"case internalServerError","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/invalid","title":"case invalid","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/invalidframepayloaddata","title":"case invalidFramePayloadData","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/mandatoryextensionmissing","title":"case mandatoryExtensionMissing","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/messagetoobig","title":"case messageTooBig","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/nostatusreceived","title":"case noStatusReceived","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/normalclosure","title":"case normalClosure","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/policyviolation","title":"case policyViolation","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/protocolerror","title":"case protocolError","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/tlshandshakefailure","title":"case tlsHandshakeFailure","type":"case"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/unsupporteddata","title":"case unsupportedData","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketinterfaceclosecode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/websocketinterfaceclosecode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/websocketinterfaceclosecode","title":"WebSocketInterfaceCloseCode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketinterfacestate\/completed","title":"case completed","type":"case"},{"path":"\/documentation\/networking\/websocketinterfacestate\/idle","title":"case idle","type":"case"},{"path":"\/documentation\/networking\/websocketinterfacestate\/running","title":"case running","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/websocketinterfacestate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/websocketinterfacestate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/websocketinterfacestate","title":"WebSocketInterfaceState","type":"enum"}],"path":"\/documentation\/networking","title":"Networking","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}