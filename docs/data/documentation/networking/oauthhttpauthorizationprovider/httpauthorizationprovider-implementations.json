{"metadata":{"modules":[{"name":"Networking"}],"title":"HTTPAuthorizationProvider Implementations","role":"collectionGroup"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/networking\/oauthhttpauthorizationprovider\/httpauthorizationprovider-implementations"]}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Networking\/documentation\/Networking\/OAuthHTTPAuthorizationProvider\/HTTPAuthorizationProvider-Implementations"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Networking\/documentation\/Networking","doc:\/\/Networking\/documentation\/Networking\/OAuthHTTPAuthorizationProvider"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Networking\/documentation\/Networking\/OAuthHTTPAuthorizationProvider\/authorize(_:)","doc:\/\/Networking\/documentation\/Networking\/OAuthHTTPAuthorizationProvider\/handle(authorizationResponse:from:)"]}],"references":{"doc://Networking/documentation/Networking/OAuthHTTPReauthorizationRequest":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/OAuthHTTPReauthorizationRequest","abstract":[{"text":"A request type that can be constructed with a refresh token, that is then used to reauthorize the client by fetching new OAuth tokens.","type":"text"}],"url":"\/documentation\/networking\/oauthhttpreauthorizationrequest","title":"OAuthHTTPReauthorizationRequest","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OAuthHTTPReauthorizationRequest"}],"navigatorTitle":[{"kind":"identifier","text":"OAuthHTTPReauthorizationRequest"}]},"doc://Networking/documentation/Networking/OAuthHTTPAuthorizationRequest":{"identifier":"doc:\/\/Networking\/documentation\/Networking\/OAuthHTTPAuthorizationRequest","abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/Networking\/documentation\/Networking\/HTTPRequest","isActive":true,"type":"reference"},{"text":" that provides OAuth tokens in its response.","type":"text"}],"url":"\/documentation\/networking\/oauthhttpauthorizationrequest","title":"OAuthHTTPAuthorizationRequest","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"OAuthHTTPAuthorizationRequest","kind":"identifier"}],"navigatorTitle":[{"text":"OAuthHTTPAuthorizationRequest","kind":"identifier"}]},"doc://Networking/documentation/Networking":{"title":"Networking","type":"topic","identifier":"doc:\/\/Networking\/documentation\/Networking","abstract":[],"role":"collection","url":"\/documentation\/networking","kind":"symbol"},"doc://Networking/documentation/Networking/OAuthHTTPAuthorizationProvider/handle(authorizationResponse:from:)":{"url":"\/documentation\/networking\/oauthhttpauthorizationprovider\/handle(authorizationresponse:from:)","kind":"symbol","title":"handle(authorizationResponse:from:)","conformance":{"constraints":[{"code":"AuthorizationRequest","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"OAuthHTTPAuthorizationRequest"},{"text":" and ","type":"text"},{"code":"ReauthorizationRequest","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"OAuthHTTPReauthorizationRequest"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"authorizationResponse","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Networking12HTTPResponseV","text":"HTTPResponse"},{"kind":"text","text":"<"},{"text":"AuthorizationRequest","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Response","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AuthorizationRequest"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/Networking\/documentation\/Networking\/OAuthHTTPAuthorizationProvider\/handle(authorizationResponse:from:)","role":"symbol"},"doc://Networking/documentation/Networking/OAuthHTTPAuthorizationProvider/authorize(_:)":{"url":"\/documentation\/networking\/oauthhttpauthorizationprovider\/authorize(_:)","kind":"symbol","title":"authorize(_:)","conformance":{"constraints":[{"type":"codeVoice","code":"AuthorizationRequest"},{"text":" conforms to ","type":"text"},{"code":"OAuthHTTPAuthorizationRequest","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ReauthorizationRequest"},{"text":" conforms to ","type":"text"},{"code":"OAuthHTTPReauthorizationRequest","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"authorize","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Request"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Request"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Networking11HTTPRequestP","text":"HTTPRequest"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Request"},{"text":".","kind":"text"},{"text":"Body","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Request"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/Networking\/documentation\/Networking\/OAuthHTTPAuthorizationProvider\/authorize(_:)","role":"symbol"},"doc://Networking/documentation/Networking/OAuthHTTPAuthorizationProvider":{"url":"\/documentation\/networking\/oauthhttpauthorizationprovider","kind":"symbol","title":"OAuthHTTPAuthorizationProvider","navigatorTitle":[{"text":"OAuthHTTPAuthorizationProvider","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OAuthHTTPAuthorizationProvider"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"HTTPReauthorizationProvider"},{"type":"text","text":" that implements the OAuth method of using access and refresh tokens. It makes use of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Networking\/documentation\/Networking\/OAuthHTTPAuthorizationRequest"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Networking\/documentation\/Networking\/OAuthHTTPReauthorizationRequest","type":"reference"},{"type":"text","text":" types to delegate the extraction of tokens back to the API specific requests."}],"identifier":"doc:\/\/Networking\/documentation\/Networking\/OAuthHTTPAuthorizationProvider","role":"symbol"}}}